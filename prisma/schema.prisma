// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Pokemon {
  id          Int     @id @default(autoincrement())
  pokedexId   Int     @unique
  name        String  @db.VarChar(255)
  generation  Int
  isLegendary Boolean

  type1     Type   @relation("PokemonFirstType", fields: [type1Name], references: [name])
  type1Name String @db.VarChar(16)

  type2     Type?   @relation("PokemonSecondType", fields: [type2Name], references: [name])
  type2Name String? @db.VarChar(16)

  pokemonNameRequests PokemonNameRequests[]
  caughtPokemons      CaughtPokemon[]
}

model Type {
  name String @id @db.VarChar(16)

  pokemonByFirstType  Pokemon[] @relation("PokemonFirstType")
  pokemonBySecondType Pokemon[] @relation("PokemonSecondType")
}

model NameRequest {
  id            Int      @id @default(autoincrement())
  requestedName String   @db.VarChar(255)
  comment       String?  @db.Text
  createdOn     DateTime @default(now()) @db.Timestamptz(6)
  isGranted     Boolean
  grantedOn     DateTime @default(now()) @db.Timestamptz(6)

  pokemonNameRequests PokemonNameRequests[]
}

model CaughtPokemon {
  id       Int        @id @default(autoincrement())
  caughtOn DateTime   @default(now()) @db.Timestamptz(6)
  isDead   Boolean
  diedOn   DateTime[]

  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId Int
}

model PokemonNameRequests {
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId Int

  nameRequest   NameRequest @relation(fields: [nameRequestId], references: [id])
  nameRequestId Int

  @@id([pokemonId, nameRequestId])
}
